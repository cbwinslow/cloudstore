"""Initial migration with all models

Revision ID: 1e7863c0144a
Revises: 
Create Date: 2025-05-31 07:41:01.168081

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1e7863c0144a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.String(length=50), nullable=False),
    sa.Column('site', sa.Enum('EBAY', 'AMAZON', 'SHOPGOODWILL', 'PUBLICSURPLUS', name='siteenum'), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('subcategory', sa.String(length=100), nullable=True),
    sa.Column('condition', sa.Enum('NEW', 'LIKE_NEW', 'VERY_GOOD', 'GOOD', 'ACCEPTABLE', 'FOR_PARTS', 'UNKNOWN', name='conditionenum'), nullable=True),
    sa.Column('brand', sa.String(length=100), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('url', sa.String(length=1000), nullable=False),
    sa.Column('image_urls', sa.JSON(), nullable=True),
    sa.Column('product_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_products_site_site_id', 'products', ['site', 'site_id'], unique=True)
    op.create_index('idx_products_title_search', 'products', ['title'], unique=False)
    op.create_index(op.f('ix_products_brand'), 'products', ['brand'], unique=False)
    op.create_index(op.f('ix_products_category'), 'products', ['category'], unique=False)
    op.create_index(op.f('ix_products_condition'), 'products', ['condition'], unique=False)
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_index(op.f('ix_products_site'), 'products', ['site'], unique=False)
    op.create_index(op.f('ix_products_site_id'), 'products', ['site_id'], unique=False)
    op.create_table('proxy_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('port', sa.Integer(), nullable=False),
    sa.Column('protocol', sa.String(length=10), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=2), nullable=True),
    sa.Column('provider', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_used', sa.DateTime(timezone=True), nullable=True),
    sa.Column('success_count', sa.Integer(), nullable=True),
    sa.Column('failure_count', sa.Integer(), nullable=True),
    sa.Column('last_failure', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failure_reason', sa.String(length=255), nullable=True),
    sa.Column('banned_sites', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip_address', 'port', 'protocol', name='uq_proxy_config')
    )
    op.create_index('idx_proxy_active_last_used', 'proxy_configs', ['is_active', 'last_used'], unique=False)
    op.create_index(op.f('ix_proxy_configs_id'), 'proxy_configs', ['id'], unique=False)
    op.create_index(op.f('ix_proxy_configs_ip_address'), 'proxy_configs', ['ip_address'], unique=False)
    op.create_index(op.f('ix_proxy_configs_is_active'), 'proxy_configs', ['is_active'], unique=False)
    op.create_table('site_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('site', sa.Enum('EBAY', 'AMAZON', 'SHOPGOODWILL', 'PUBLICSURPLUS', name='siteenum'), nullable=False),
    sa.Column('base_url', sa.String(length=255), nullable=False),
    sa.Column('search_url_template', sa.String(length=500), nullable=True),
    sa.Column('last_crawl_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('crawl_frequency_minutes', sa.Integer(), nullable=True),
    sa.Column('rate_limit_requests', sa.Integer(), nullable=True),
    sa.Column('rate_limit_period_seconds', sa.Integer(), nullable=True),
    sa.Column('requires_proxy', sa.Boolean(), nullable=True),
    sa.Column('requires_login', sa.Boolean(), nullable=True),
    sa.Column('login_details', sa.JSON(), nullable=True),
    sa.Column('crawl_settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('site')
    )
    op.create_index(op.f('ix_site_metadata_id'), 'site_metadata', ['id'], unique=False)
    op.create_table('arbitrage_opportunities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_product_id', sa.Integer(), nullable=False),
    sa.Column('target_product_id', sa.Integer(), nullable=False),
    sa.Column('source_price', sa.Float(), nullable=False),
    sa.Column('target_price', sa.Float(), nullable=False),
    sa.Column('price_difference', sa.Float(), nullable=False),
    sa.Column('profit_margin', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('shipping_source_to_customer', sa.Float(), nullable=True),
    sa.Column('other_fees', sa.Float(), nullable=True),
    sa.Column('estimated_net_profit', sa.Float(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('identified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['source_product_id'], ['products.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['target_product_id'], ['products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_arbitrage_product_pair', 'arbitrage_opportunities', ['source_product_id', 'target_product_id'], unique=True)
    op.create_index('idx_arbitrage_profit_margin', 'arbitrage_opportunities', ['profit_margin'], unique=False)
    op.create_index(op.f('ix_arbitrage_opportunities_id'), 'arbitrage_opportunities', ['id'], unique=False)
    op.create_index(op.f('ix_arbitrage_opportunities_identified_at'), 'arbitrage_opportunities', ['identified_at'], unique=False)
    op.create_index(op.f('ix_arbitrage_opportunities_source_product_id'), 'arbitrage_opportunities', ['source_product_id'], unique=False)
    op.create_index(op.f('ix_arbitrage_opportunities_target_product_id'), 'arbitrage_opportunities', ['target_product_id'], unique=False)
    op.create_table('price_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('shipping_cost', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('is_sale_price', sa.Boolean(), nullable=True),
    sa.Column('regular_price', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_price_history_product_timestamp', 'price_history', ['product_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_price_history_id'), 'price_history', ['id'], unique=False)
    op.create_index(op.f('ix_price_history_product_id'), 'price_history', ['product_id'], unique=False)
    op.create_index(op.f('ix_price_history_timestamp'), 'price_history', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_price_history_timestamp'), table_name='price_history')
    op.drop_index(op.f('ix_price_history_product_id'), table_name='price_history')
    op.drop_index(op.f('ix_price_history_id'), table_name='price_history')
    op.drop_index('idx_price_history_product_timestamp', table_name='price_history')
    op.drop_table('price_history')
    op.drop_index(op.f('ix_arbitrage_opportunities_target_product_id'), table_name='arbitrage_opportunities')
    op.drop_index(op.f('ix_arbitrage_opportunities_source_product_id'), table_name='arbitrage_opportunities')
    op.drop_index(op.f('ix_arbitrage_opportunities_identified_at'), table_name='arbitrage_opportunities')
    op.drop_index(op.f('ix_arbitrage_opportunities_id'), table_name='arbitrage_opportunities')
    op.drop_index('idx_arbitrage_profit_margin', table_name='arbitrage_opportunities')
    op.drop_index('idx_arbitrage_product_pair', table_name='arbitrage_opportunities')
    op.drop_table('arbitrage_opportunities')
    op.drop_index(op.f('ix_site_metadata_id'), table_name='site_metadata')
    op.drop_table('site_metadata')
    op.drop_index(op.f('ix_proxy_configs_is_active'), table_name='proxy_configs')
    op.drop_index(op.f('ix_proxy_configs_ip_address'), table_name='proxy_configs')
    op.drop_index(op.f('ix_proxy_configs_id'), table_name='proxy_configs')
    op.drop_index('idx_proxy_active_last_used', table_name='proxy_configs')
    op.drop_table('proxy_configs')
    op.drop_index(op.f('ix_products_site_id'), table_name='products')
    op.drop_index(op.f('ix_products_site'), table_name='products')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_index(op.f('ix_products_condition'), table_name='products')
    op.drop_index(op.f('ix_products_category'), table_name='products')
    op.drop_index(op.f('ix_products_brand'), table_name='products')
    op.drop_index('idx_products_title_search', table_name='products')
    op.drop_index('idx_products_site_site_id', table_name='products')
    op.drop_table('products')
    # ### end Alembic commands ###
